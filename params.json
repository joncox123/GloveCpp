{"name":"GloveCpp","tagline":"Modern C++ Implementation of the GloVe Natural Language Processing algorithm","body":"### GloveCpp\r\n\r\n### Introduction\r\nGloVe C++ is an implementation of the GloVe algorithm for learning word vectors from a corpus. The details of this algorithm are described by Pennington, Socher and Manning:\r\n\r\nPennington, Jeffrey, Richard Socher, and Christopher D. Manning. \"Glove: Global vectors for word representation.\" Proceedings of the Empiricial Methods in Natural Language Processing (EMNLP 2014) 12 (2014): 1532-1543.\r\n\r\nThis implementation takes a modern, C++ approach. In particular, it leverages the Intel Thread Building Blocks (TBB) library for efficient parallelization when building a vocabulary and the co-occurrence matrix from a corpus. The TBB library also provides an efficient, thread safe hashmap for storing this data. In addition, GloVe C++ provides a vectorized cost function which uses the sparse matrix features in the Armadillo library to parallelize calculation of the gradient and cost/lost during gradient descent. \r\nWhile this approach may or may not be faster than an efficient, multi-threaded implementation in C, it is nevertheless simpler to read, understand and modify. A vectorized implementation is also potentially capable of greater performance with a suitable matrix library, by exploiting modern CPU architectures.\r\n\r\n### Feature Requests or Bugs\r\nIf you have a feature request, or if you find a bug, you can contact the author at joncox (at) alum (dot) mit (dot) edu.\r\n \r\n### Compiling the Source Code\r\nTo compile GloVe, you will need the following libraries and compiler installed on your system:\r\n+ Armadillo 5.4 or greater\r\n+ Intel Thread Building Blocks 4.2 or greater\r\n+ Boost 1.55 or greater\r\n+ G++ compiler 4.9 or greater.\r\nSimply run the make command from within the Release directory to compile GloVe.\r\n \r\n### Operation\r\nUsing GloVe C++ is divided into three stages:\r\n+ Building a vocabulary from a corpus of text. \r\n+ Building the co-occurrence matrix from a corpus of text.\r\n+ Learning the word vectors from the co-occurrence matrix.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}